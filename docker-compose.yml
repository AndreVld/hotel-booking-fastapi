version: '3.8'
services:

  nginx:
    image: nginx:latest
    container_name: booking_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
      - 443:443
    links:
      - booking
      - flower
    


  db:
    image: postgres:15
    container_name: booking_db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-non-dev


  redis:
    image: redis:7
    container_name: booking_redis

  
  booking:
      build:
        context: .
      container_name: booking_app
      env_file:
        - .env-non-dev
      depends_on:
        - db
        - redis
      command: ["/booking_app/docker/app.sh"]
      # ports:
      #   - 8080:8000


  celery:
    build:
      context: .
    container_name: booking_celery
    env_file:
      - .env-non-dev
    command: ["/booking_app/docker/celery.sh", "celery"]
    depends_on:
      - redis
  
  celery_beat:
    build:
      context: . 
    container_name: booking_celery_beat
    command: ["/booking_app/docker/celery.sh", "celery_beat"]
    env_file:
      - .env-non-dev
    depends_on:
      - redis


  flower:
    build:
      context: .
    container_name: booking_flower
    env_file:
      - .env-non-dev
    command: ["/booking_app/docker/celery.sh", "flower"]
    ports:
      - 5555:5555
    depends_on:
      - redis

  # prometheus:
  #   image: prom/prometheus:v2.43.0
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheusdata:/prometheus
  #   restart: unless-stopped
  #   ports:
  #     - 9090:9090

  # grafana:
  #   image: grafana/grafana:9.4.7
  #   container_name: grafana
  #   volumes:
  #     - grafanadata:/var/lib/grafana
  #   restart: unless-stopped
  #   ports:
  #     - 3000:3000
      
volumes:
  postgresdata:
  # grafanadata:
  # prometheusdata: